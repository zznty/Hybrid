using System;
using System.Linq;
using Microsoft.CodeAnalysis;

namespace Hybrid.Com.SourceGenerator;

public partial class ComGenerator
{
    private static void EmitDispatchInformationSource(SourceProductionContext context,
        InterfaceDefinition interfaceDefinition)
    {
        context.AddSource($"{interfaceDefinition.Type.ToDisplayString()}.Dispatch.g.cs",
            $$"""
              // <auto-generated />
              file sealed unsafe class ComDispatchInformation : global::Hybrid.Com.TypeLib.IComInterfaceDispatch
              {
                  private static global::Hybrid.Com.TypeLib.ComInterfaceDispatchDetails* _details;
                  
                  public static unsafe global::Hybrid.Com.TypeLib.ComInterfaceDispatchDetails* GetComInterfaceDispatchDetails(out int count)
                  {
                      count = {{interfaceDefinition.VTableOffset + interfaceDefinition.Members.Length}};
                      
                      if (_details == null)
                      {
                          _details = (global::Hybrid.Com.TypeLib.ComInterfaceDispatchDetails*)global::System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(ComDispatchInformation), sizeof(global::Hybrid.Com.TypeLib.ComInterfaceDispatchDetails) * count);
                          {
                              {{(interfaceDefinition.Type.Interfaces.SingleOrDefault(IsTypeComVisible) is { } dispatchParent ?
                                  $"global::System.Runtime.InteropServices.NativeMemory.Copy(global::Hybrid.Com.TypeLib.IComInterfaceDispatchDetails.GetComInterfaceDispatchDetailsFromTypeHandle(typeof({dispatchParent.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat)}).TypeHandle, out _), _details, (nuint)(sizeof(void*) * {interfaceDefinition.VTableOffset}));" :
                                  """
                                  _details[0].MemberName = global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.ConvertToUnmanaged("QueryInterface");
                                  _details[0].Flags = global::Hybrid.Com.Dispatch.InvokeFlags.DispatchMethod;
                                  _details[0].ParameterCount = 3;
                                  _details[0].Parameters = (global::Hybrid.Com.TypeLib.DispatchParameterDetails*)global::System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(ComDispatchInformation), sizeof(global::Hybrid.Com.TypeLib.DispatchParameterDetails) * 3);
                                  _details[0].Parameters[0].Type = global::System.Runtime.InteropServices.VarEnum.VT_HRESULT;
                                  _details[0].Parameters[1].Type = global::System.Runtime.InteropServices.VarEnum.VT_CLSID;
                                  _details[0].Parameters[2].Type = global::System.Runtime.InteropServices.VarEnum.VT_UNKNOWN;
                                  _details[0].Parameters[1].Flags = global::Hybrid.Com.TypeLib.DispatchParameterFlags.In;
                                  _details[0].Parameters[2].Flags = global::Hybrid.Com.TypeLib.DispatchParameterFlags.Out;
                                  _details[1].MemberName = global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.ConvertToUnmanaged("AddRef");
                                  _details[1].Flags = global::Hybrid.Com.Dispatch.InvokeFlags.DispatchMethod;
                                  _details[1].ParameterCount = 1;
                                  _details[1].Parameters = (global::Hybrid.Com.TypeLib.DispatchParameterDetails*)global::System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(ComDispatchInformation), sizeof(global::Hybrid.Com.TypeLib.DispatchParameterDetails) * 1);
                                  _details[1].Parameters[0].Type = global::System.Runtime.InteropServices.VarEnum.VT_UI4;
                                  _details[2].MemberName = global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.ConvertToUnmanaged("Release");
                                  _details[2].Flags = global::Hybrid.Com.Dispatch.InvokeFlags.DispatchMethod;
                                  _details[2].ParameterCount = 1;
                                  _details[2].Parameters = (global::Hybrid.Com.TypeLib.DispatchParameterDetails*)global::System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(ComDispatchInformation), sizeof(global::Hybrid.Com.TypeLib.DispatchParameterDetails) * 1);
                                  _details[2].Parameters[0].Type = global::System.Runtime.InteropServices.VarEnum.VT_UI4;
                                  """)}}
                          }
                          
                          {
                              {{string.Join(Environment.NewLine, interfaceDefinition.Members.Select((member, i) =>
                                  $"""
                                   _details[{interfaceDefinition.VTableOffset + i}].MemberName = global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.ConvertToUnmanaged("{member.Name}");
                                   _details[{interfaceDefinition.VTableOffset + i}].Flags = global::Hybrid.Com.Dispatch.InvokeFlags.{member.MemberType switch {
                                       InterfaceMemberType.Method => "DispatchMethod",
                                       InterfaceMemberType.PropertyGet => "DispatchPropertyGet",
                                       InterfaceMemberType.PropertyPut => "DispatchPropertyPut",
                                       InterfaceMemberType.PropertyPutRef => "DispatchPropertyPutRef",
                                       _ => throw new ArgumentOutOfRangeException()
                                   }};
                                   _details[{interfaceDefinition.VTableOffset + i}].Parameters = (global::Hybrid.Com.TypeLib.DispatchParameterDetails*)global::System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(ComDispatchInformation), sizeof(global::Hybrid.Com.TypeLib.DispatchParameterDetails) * (_details[{interfaceDefinition.VTableOffset + i}].ParameterCount = {1 + member switch {
                                       { MemberType: InterfaceMemberType.PropertyGet or InterfaceMemberType.PropertyPut or InterfaceMemberType.PropertyPutRef } => 1,
                                       { MemberType: InterfaceMemberType.Method, Member: IMethodSymbol methodSymbol } => methodSymbol.Parameters.Length + (MemberDoesNotNeedResultPtr(member) ? 0 : 1), // +1 for the return value
                                       _ => 0
                                   }}));
                                   _details[{interfaceDefinition.VTableOffset + i}].Parameters[0].Type = {member.Member switch {
                                       IMethodSymbol or IPropertySymbol when !member.IsPreserveSig => "global::System.Runtime.InteropServices.VarEnum.VT_HRESULT",
                                       IMethodSymbol methodSymbol => MarshalTypeToVariant(methodSymbol.ReturnType),
                                       _ => throw new NotSupportedException()
                                   }};
                                   {string.Join(Environment.NewLine, (member.Member switch {
                                       IPropertySymbol propertySymbol => [propertySymbol.Type],
                                       IMethodSymbol methodSymbol when member.IsPreserveSig => methodSymbol.Parameters.Select(b => b.Type),
                                       IMethodSymbol methodSymbol when MemberDoesNotNeedResultPtr(member) => methodSymbol.Parameters.Select(b => b.Type),
                                       IMethodSymbol methodSymbol => methodSymbol.Parameters.Select(b => b.Type).Append(methodSymbol.ReturnType),
                                       _ => []
                                   }).Select((type, paramIdx) => $"_details[{interfaceDefinition.VTableOffset + i}].Parameters[{paramIdx + 1}].Type = {MarshalTypeToVariant(type)};"))}
                                   {member.MemberType switch {
                                       InterfaceMemberType.PropertyGet => $"_details[{interfaceDefinition.VTableOffset + i}].Parameters[1].Flags = global::Hybrid.Com.TypeLib.DispatchParameterFlags.Out;",
                                       InterfaceMemberType.PropertyPutRef => $"_details[{interfaceDefinition.VTableOffset + i}].Parameters[1].Flags = global::Hybrid.Com.TypeLib.DispatchParameterFlags.In;",
                                       InterfaceMemberType.Method when member.Member is IMethodSymbol methodSymbol => string.Join(Environment.NewLine, methodSymbol.Parameters.Select((b, paramIdx) => $"_details[{interfaceDefinition.VTableOffset + i}].Parameters[{paramIdx + 1}].Flags = {b.RefKind switch {
                                           RefKind.None => "global::Hybrid.Com.TypeLib.DispatchParameterFlags.None",
                                           RefKind.In => "global::Hybrid.Com.TypeLib.DispatchParameterFlags.In",
                                           RefKind.Out => "global::Hybrid.Com.TypeLib.DispatchParameterFlags.Out",
                                           RefKind.Ref or RefKind.RefReadOnly => "global::Hybrid.Com.TypeLib.DispatchParameterFlags.In | global::Hybrid.Com.TypeLib.DispatchParameterFlags.Out",
                                           _ => throw new ArgumentOutOfRangeException()
                                       }};")),
                                       _ => string.Empty
                                   }}
                                   {(member.MemberType != InterfaceMemberType.Method || MemberDoesNotNeedResultPtr(member) ? string.Empty : $"_details[{interfaceDefinition.VTableOffset + i}].Parameters[{((IMethodSymbol)member.Member).Parameters.Length + 1}].Flags = global::Hybrid.Com.TypeLib.DispatchParameterFlags.Out;")}
                                   """
                              ))}}
                          }
                      }
                      
                      return _details;
                  }
              }
              namespace {{interfaceDefinition.Type.ContainingNamespace.ToDisplayString()}}
              {
                  [global::Hybrid.Com.TypeLib.ComInterfaceDispatchDetailsAttribute<ComDispatchInformation>]
                  public partial interface {{interfaceDefinition.Type.Name}}
                  {
                  }    
              }
              """);
    }
}